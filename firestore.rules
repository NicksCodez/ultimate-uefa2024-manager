rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // This rule allows anyone with your Firestore database reference to view, edit,
    // and delete all data in your Firestore database. It is useful for getting
    // started, but it is configured to expire after 30 days because it
    // leaves your app open to attackers. At that time, all client
    // requests to your Firestore database will be denied.
    //
    // Make sure to write security rules for your app before that time, or else
    // all client requests to your Firestore database will be denied until you Update
    // your rules
    match /{document=**} {
      allow read, write: if false;
    }

    // Teams collection and its subcollections
    match /teams/{document=**} {
      allow read: if true;
      allow write: if false;
    }
    
    // User emails collection
    match /user_emails/{email} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }
    
    // User usernames collection
    match /user_usernames/{username} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.uid;
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == userId;
      allow update, delete: if request.auth != null && request.auth.uid == userId;
    }

    match /games/{gameId} {
      // Allow read if the user is authenticated and the userId field matches their UID
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      
      // Allow create if the user is authenticated and they're setting their own UID
      allow create: if request.auth != null 
                    && request.resource.data.userId == request.auth.uid
                    && request.resource.data.stage == 'team_selection'
                    && request.resource.data.createdAt == request.time
                    && request.resource.data.ended == false
                    && request.resource.data.won == false
                    && request.resource.data.lost == false
                    && request.resource.data.round == 1;
      
      // Allow update if the user is authenticated and they're not changing the userId
      allow update: if request.auth != null 
                    && request.auth.uid == resource.data.userId
                    && request.resource.data.userId == resource.data.userId;
      
      // Allow delete if the user owns the document
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}